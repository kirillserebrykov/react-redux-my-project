{"version":3,"sources":["img/loader.gif","DAL/API.js","stait.js","login_to_ac/log.module.css","login_to_ac/login_validator.jsx","login_to_ac/login_erors.jsx","login_to_ac/login.jsx","login_to_ac/register.jsx","body/content.jsx","body/main.jsx","posts/posts.jsx","continer/PostsContainer.jsx","reducer/reduserApp.js","reducer/reducer.js","reducer/reduserLog.js","reducer/reduserHeader.js","reducer/reduserNews.js","store.js","App.js","serviceWorker.js","index.js","continer/selectors/SelectorHeader.jsx","continer/HeaderContainer.jsx","Check.jsx","userPege/prelouder.jsx","body/header.jsx"],"names":["module","exports","instance","axios","baseURL","DalApi","then","response","data","user_id_url","get","CurrentPage","PageSize","pagesNum","withCredentials","email","password","rememberMe","post","delete","ADD_MESS_ACTION_CREATOR","messtext","id","type","messgetext","userID","MESS_CHANGE_ACTION_CREATOR","USER_CHANGE_ACTION_CREATOR","setUsersOur","users","usersDATA_OUR","setPages","pages","toggelIsFetching","isFetching","setTotalUsersCount","TotalUsersCount","count","loginData","boolen","isAuth","setProfileAPI","dispatch","a","Profile","UserPage_OUR_Api","items","totalCount","getUsersOur","respose","NewsDataApi","articles","getMeLogin","resultCode","Login","remeberMe","messages","stopSubmit","_error","UnLogin","maxLength","Required_Rrors_Email","input","meta","props","className","touched","error","styles","wraperEmail","beforeEmail","textError","Required_Rrors_Password","required_validator_em","value","indexOf","required_validator_ps","length","ReduxLoginForm","reduxForm","form","onSubmit","handleSubmit","Field","validate","component","placeholder","name","SummerError","connect","state","HADER","ID","data_login","idUser","IS_FETCHING","mapMessID","map","item","to","formdata","RememperMe","Reg","Body","MainBody","text_post","React","createRef","Posts","stait","typing","addmesege","text","current","user","addmess","Change_text","e","setState","Change_user","onChange_user","mass_map","PostsPage","Mess","el","src","alt","content","scroll","this","onChange","ref","onClick","Component","withCheckLoginUnlogin","compose","ADDMES","state_","MessStandart","UserStandart","onChange_text","initialState","initialized","PD","UDO","P","F","T","TotalUserCount","HD","news","reducers","combineReducers","action","k","y","newMess","StateCopy","push","USER_DATA_CHANG_REREDUCER","USER_DATA_CHANG_OUR_REREDUCER","PAGES_SIZE","TOTAL_USERS","News_Data","formReducer","AppSettings","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunk","NewsContainer","lazy","UserPageContainer","Suspense","fallback","App","componentDidMount","initialize","path","exact","render","PostsContainer","AppContainer","MyApp","Boolean","location","hostname","match","unregister","navigator","serviceWorker","ready","registration","catch","console","message","ReactDOM","StrictMode","document","getElementById","MassDataLogin","isAuthSeleted","idUserSeleted","UserPegeContainer","mapStatetoPropsForRedirect","RedirectComponent","Prelouder","prelouder","Link","togleClass","togleClassWraper","Header","animetedClick","classList","toggle","mapHeaderLoginData","key","login","CheckLogin","href"],"mappings":"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","file":"static/js/main.0ed32e05.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loader.822f78a2.gif\";","\r\n       \r\nimport * as axios from 'axios'\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/'\r\n\r\n})\r\nexport const DalApi = {\r\n    NewsAPI() {\r\n        return axios.get(`https://newsapi.org/v2/top-headlines?sources=the-next-web&apiKey=6f5d96f4f44f49949ff224812b5d39d3`).then(response => {\r\n            return response.data\r\n        })\r\n\r\n    },\r\n    UserPage_Api(user_id_url ) {\r\n       \r\n       \r\n       \r\n        return instance.get(\"profile/\" + user_id_url).then(response => {\r\n            return response.data\r\n        })\r\n    },\r\n    UserPage_OUR_Api(CurrentPage,PageSize) {\r\n        return instance.get(`users?page=${CurrentPage}&count=${PageSize}`).then(response => {\r\n            return response.data\r\n        })\r\n    },\r\n    Users(pagesNum,PageSize) {\r\n      return  instance.get(`users?page=${pagesNum}&count=${PageSize}`)\r\n},\r\nGetLoginApi (){\r\n   return instance.get(\"auth/me\",{\r\n                withCredentials:true\r\n            })\r\n},\r\nPostLoginData(email,password,rememberMe = false){\r\n    debugger\r\n   return  instance.post(\"/auth/login\",{\r\n        email:email,\r\n        password:password,\r\n        rememberMe:rememberMe\r\n\r\n    },{withCredentials:true})\r\n},\r\nDelLoginData(){\r\n    return  instance.delete(\"/auth/login\" ,)\r\n }\r\n \r\n}\r\n\r\n","\r\n\r\nimport { DalApi } from './DAL/API'\r\nimport { stopSubmit } from 'redux-form';\r\n//  ПЕРЕМЕННЫЕ TYPE  ------------------------------------------\r\nconst ADD_MESS = \"ADD-MESS\";\r\nconst MESS_CHANGE = \"MESS-CHANGE\";\r\nconst USER_CHANGE = \"USER-CHANGE\";\r\nconst PD = \"profile_data\"\r\nconst UDO = \"users_data_our\"\r\nconst P = \"pages\"\r\nconst F = \"isFetching\"\r\nconst T = \"TotalUsersCount\"\r\nconst HD = \"HADER_data\"\r\nconst NewsData = \"NewsData\"\r\n//----------------------------------\r\n// функции для формирования dispatch --------------------------\r\nexport const ADD_MESS_ACTION_CREATOR = (messtext, id) => {\r\n    return {\r\n        type: ADD_MESS,\r\n        messgetext: messtext,\r\n        userID: id,\r\n    }\r\n}\r\nexport const MESS_CHANGE_ACTION_CREATOR = (messtext) => {\r\n    return {\r\n        type: MESS_CHANGE,\r\n        messgetext: messtext,\r\n    }\r\n}\r\nexport const USER_CHANGE_ACTION_CREATOR = (id) => {\r\n    return {\r\n        type: USER_CHANGE,\r\n        userID: id,\r\n\r\n    }\r\n}\r\nexport const setProfile = (Profile) => {\r\n\r\n    return {\r\n        type: PD,\r\n        Profile\r\n\r\n    }\r\n}\r\n\r\nexport const setUsersOur = (users) => {\r\n\r\n    return {\r\n        type: UDO,\r\n        usersDATA_OUR: users[0],\r\n\r\n    }\r\n}\r\nexport const setPages = (pages) => {\r\n\r\n    return {\r\n        type: P,\r\n        pages: pages,\r\n\r\n    }\r\n}\r\nexport const toggelIsFetching = (isFetching) => {\r\n\r\n    return {\r\n        type: F,\r\n        isFetching,\r\n\r\n    }\r\n}\r\nexport const setTotalUsersCount = (TotalUsersCount) => {\r\n\r\n    return {\r\n        type: T,\r\n        count: TotalUsersCount[0],\r\n\r\n    }\r\n}\r\n\r\nexport const loginData = (data,boolen) => {\r\ndebugger    \r\n    return {\r\n        type: HD,\r\n        data: data[0],\r\n        isAuth:boolen,\r\n       \r\n\r\n    }\r\n}\r\nexport const News_Data = (data) => {\r\n    debugger\r\n    return {\r\n        type: NewsData,\r\n        data: data[0],\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const setProfileAPI = (user_id_url) => async(dispatch) => {\r\n\r\n    dispatch(toggelIsFetching(true))\r\n    let data = await  DalApi.UserPage_Api(user_id_url)\r\n        dispatch(setProfile([data]))\r\n        dispatch(toggelIsFetching(false))\r\n    \r\n}\r\n\r\nexport const UserPage_OUR_Api = (CurrentPage, PageSize) => async(dispatch) => {\r\n    dispatch(toggelIsFetching(true))\r\n    let data = await DalApi.UserPage_OUR_Api(CurrentPage, PageSize)\r\n        dispatch(setUsersOur([data.items]))\r\n        dispatch(setTotalUsersCount([data.totalCount]))\r\n        dispatch(toggelIsFetching(false))\r\n    \r\n}\r\nexport const getUsersOur = (pagesNum,PageSize) => async(dispatch) => {\r\n    dispatch(setPages(pagesNum))\r\n    dispatch(toggelIsFetching(true))\r\n    let respose = await  DalApi.Users(pagesNum,PageSize)\r\n        dispatch(setUsersOur([respose.data.items]))\r\n        dispatch(toggelIsFetching(false))\r\n    \r\n    \r\n}\r\nexport const NewsDataApi  = () =>  async(dispatch) =>{\r\n    dispatch(toggelIsFetching(true))\r\n        let {articles}= await DalApi.NewsAPI()\r\n            dispatch(toggelIsFetching(false))\r\n            dispatch(News_Data([articles]))\r\n        }\r\n \r\nexport const getMeLogin = () => async(dispatch) =>{\r\n       let response = await  DalApi.GetLoginApi()\r\n            if(response.data.resultCode === 0)dispatch(loginData([response.data],true))\r\n            else dispatch(loginData([response.data],false))  \r\n} \r\n  \r\n\r\nexport const Login = (email,password,remeberMe)  => async(dispatch) =>{\r\n    let {resultCode,response} = await   DalApi.PostLoginData(email,password,remeberMe)\r\n    if(resultCode === 0){\r\n        dispatch(getMeLogin(email,password,remeberMe))\r\n    }\r\n    else{\r\n        let messages = response.data.messages[0]\r\n        dispatch(stopSubmit('Login',{_error:`Hmm ${messages} !` }))\r\n        dispatch(toggelIsFetching(false))\r\n    }\r\n}\r\nexport const UnLogin = () => async(dispatch) =>{\r\n   \r\n    let response = await   DalApi.DelLoginData()\r\n        if(response.data.resultCode === 0 ){\r\n            dispatch(loginData([response.data],false))\r\n           }\r\n    \r\n     \r\n    }\r\n//-------------------------------------------------------------\r\n\r\n// store ------------------------------------------------------\r\n// const store = {\r\n//     renderDOM() {\r\n\r\n//     },\r\n//     state_: {\r\n//         Mess: [{\r\n//             id: \"Admin \",\r\n//             content: \"Hi\",\r\n//         }],\r\n\r\n\r\n//         MessStandart: \"\",\r\n//         UserStandart: \"\",\r\n\r\n//     },\r\n\r\n\r\n//     subscribe(observer) {\r\n//         this.renderDOM = observer\r\n//     },\r\n\r\n//     dispatch(action) {\r\n\r\n//         this.state_ = MESEGES_REDUCER(this.state_, action);\r\n//         this.renderDOM()\r\n\r\n//         this.state_ = MESS_CHANGE_REDUCER(this.state_, action);\r\n//         this.renderDOM()\r\n//         this.state_ = USER_CHANG_REREDUCER(this.state_, action);\r\n//         this.renderDOM()\r\n//     }\r\n// }\r\n//------_---------------------------------------------\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wraperEmail\":\"log_wraperEmail__VtSAU\",\"beforeEmail\":\"log_beforeEmail__NdeWM\",\"textError\":\"log_textError__12S3F\",\"SummerError\":\"log_SummerError__1Vrbe\"};","import React from 'react';\r\nimport './log.css';\r\n  \r\nexport const required_validator_email = (value = []) => {\r\n  if (value.indexOf('@') === -1) return \"Incorrect email\"\r\n  return undefined\r\n}\r\nexport const required_validator_password = (maxLength) => (value = []) => {\r\n  if (value.length > maxLength) return \"You have exceeded the maximum number of characters in a password\"\r\n  return undefined\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport styles from './log.module.css';\r\n\r\nexport const Required_Rrors_Email = ({input, meta ,...props }) => {\r\n\r\n\r\n  return <div className={ meta.touched && meta.error &&  styles.wraperEmail} >  \r\n    <input {...input} {...props} />\r\n<div className={meta.touched && meta.error &&  styles.beforeEmail} ><span className={styles.textError}>{ meta.touched && meta.error}</span></div>\r\n    </div>\r\n};\r\n\r\n\r\nexport const Required_Rrors_Password = ({input, meta ,...props }) => {\r\n\r\n  return <div className={ meta.touched && meta.error &&  styles.wraperEmail} >  \r\n    <input {...input} {...props} />\r\n<div className={meta.touched && meta.error &&  styles.beforeEmail} ><span className={styles.textError}>{ meta.touched && meta.error}</span></div>\r\n    </div>\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './log.css';\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport styles from './log.module.css';\r\nimport { Redirect } from 'react-router';\r\nimport { required_validator_email, required_validator_password } from './login_validator';\r\nimport { Required_Rrors_Email, Required_Rrors_Password } from './login_erors';\r\nimport { connect } from 'react-redux'\r\nimport { Login } from '../stait';\r\nlet home = \"/home\";\r\n\r\nlet required_validator_em = required_validator_email\r\nlet required_validator_ps = required_validator_password(8)\r\nlet LoginForm = (props) => {\r\n\r\n\r\n  return <>\r\n  <form onSubmit={props.handleSubmit} >\r\n    <Field validate={[required_validator_em]} component={Required_Rrors_Email} placeholder=\"Email\" name=\"email\" className=\"userName login_play\" />\r\n    <Field validate={[required_validator_ps]} component={Required_Rrors_Password} placeholder=\"Password\" name={\"password\"} className=\"password login_play\" type=\"password\" />\r\n    <Field component=\"input\" name={\"RememperMe\"} className=\"RememperMe\" type=\"checkbox\" /> <span className=\"RememperMeText\">RememperMe</span>\r\n\r\n     <button form  className=\"sumbit  \" >sumbit</button>\r\n    {props.error && <div className={styles.SummerError}>{props.error}</div>}\r\n  </form>\r\n \r\n  </>\r\n}\r\n\r\nlet ReduxLoginForm = reduxForm({\r\n  // a unique name for the form\r\n  form: 'Login'\r\n})(LoginForm)\r\n\r\nconst LoginJSX = (props) => {\r\n\r\n  let onSubmit = (formdata) => {\r\n\r\n    props.Login(formdata.email, formdata.password, formdata.RememperMe)\r\n\r\n  }\r\n  debugger\r\n\r\n let mapMessID = props.ID.map(item =>{\r\n\r\n    if (item.resultCode === 0) return <Redirect to={`/News`} />\r\n })\r\n\r\n  return (\r\n    <div className=\"login_wraper\" >\r\n      \r\n      <div className=\"login\" >\r\n        <p className=\"login_text\">Login</p>\r\n        <ReduxLoginForm onSubmit={onSubmit} />\r\n        <NavLink className=\"Reg\" to=\"/register\"><span>Register</span></NavLink>\r\n      </div>\r\n     \r\n      {mapMessID}\r\n       \r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nlet mapStatetoProps = (state) => {\r\n  debugger\r\n  return {\r\n    isAuth: state.HADER.isAuth,\r\n    ID: state.HADER.data_login,\r\n    idUser: state.HADER.idUser,\r\n    isFetching: state.IS_FETCHING.isFetching\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStatetoProps, { Login })(LoginJSX);","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nlet Reg = (props) =>{\r\n    return(\r\n    <div className = \"login_wraper\" >\r\n       \r\n      <div className = \"login\" > \r\n      <p className = \"login_text\">Register</p>\r\n      <input placeholder=\"Nickname\" className = \"userName login_play\" type=\"text\"/>\r\n      <input placeholder=\"Password\" className = \"password login_play\" type=\"password\"/>\r\n      <input placeholder=\"Email\" className = \"Email login_play\" type=\"text\"/>\r\n      <NavLink className=\"button_sumbit\" to = \"/home\"><button className=\"sumbit\" >sumbit</button></NavLink>\r\n      \r\n      <NavLink className=\"login_link\" to=\"/login\"><span>login</span></NavLink>\r\n     \r\n    </div>\r\n        \r\n     \r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Reg;","import React from 'react';\r\nimport './style.css';\r\n\r\n\r\nconst Body = (props) =>{\r\n    return(\r\n        <div className=\"wraper_content\">\r\n             <p>welcome</p>    \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Body;","import React from 'react';\r\nimport Body from './content';\r\n\r\nimport HederContainer from '../continer/HeaderContainer';\r\n\r\nconst MainBody = (props) =>{\r\n    return(\r\n        <div className=\"shell\">\r\n        <HederContainer/> \r\n        <div className=\"shell_wraper\">\r\n        <Body />\r\n        </div>\r\n        </div>\r\n        \r\n        \r\n    );\r\n}\r\n\r\nexport default MainBody;\r\n","import React from 'react';\r\nimport Header from '../body/header';\r\nimport './posts.css'\r\nimport { Redirect } from 'react-router';\r\nimport HederContainer from '../continer/HeaderContainer';\r\nimport {withCheckLoginUnlogin} from '../Check'\r\n\r\n\r\nlet text_post = React.createRef();\r\nlet id = React.createRef();\r\nclass Posts extends React.Component {\r\n    stait = {\r\n    typing :\"1\"\r\n    }\r\n    addmesege = () => {\r\n        let text = text_post.current.value;\r\n        let user = id.current.value;\r\n        this.props.addmess(text, user)\r\n    }\r\n\r\n    Change_text = (e) => {\r\n        this.setState({\r\n            typing :12\r\n        })\r\n        \r\n    }\r\n    Change_user = () => {\r\n        let text = id.current.value;\r\n        this.props.onChange_user(text)\r\n    }\r\n    mass_map = this.props.PostsPage.Mess.map((el) => <div className=\"wrapermess\"><div\r\n        className=\"mess\">  <img className=\"avatar\" src=\"https://lumpics.ru/wp-content/uploads/2017/11/Programmyi-dlya-sozdaniya-avatarok.png\" alt=\"\" /> {el.id} : {el.content} </div></div>\r\n    );\r\n\r\n    render() {\r\n\r\n\r\n\r\n        return (\r\n            <div>\r\n                <HederContainer/> \r\n                <div className=\"wraper__posts\">\r\n                    <div className=\"content__posts\">\r\n                        <h1>message </h1>\r\n                        <div><div scroll=\"yes\" className=\"wraper_mess\">{this.mass_map} </div> </div>\r\n                    </div>\r\n\r\n                    <div className=\"addPost\">\r\n                        <input id=\"mees\" onChange={this.Change_text} ref={text_post} value={this.stait.typing} placeholder=\"write a message!\" className=\"text_post\" type=\"text\" />\r\n                        <input onChange={this.Change_user} value={this.stait.typing} ref={id} placeholder=\"enter nickname!\" className=\"userNick\" type=\"text\" />\r\n                        <button onClick={this.addmesege} >Add</button>\r\n                        <button className=\"clear\" >clear</button>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default  (withCheckLoginUnlogin(Posts)) ;","import React from 'react';\r\nimport {connect} from 'react-redux'\r\nimport Posts from '../posts/posts';\r\nimport { ADD_MESS_ACTION_CREATOR, MESS_CHANGE_ACTION_CREATOR, USER_CHANGE_ACTION_CREATOR } from '../stait';\r\nimport withCheckLoginUnlogin from '../Check'\r\nimport { compose } from 'redux';\r\n\r\n\r\n\r\nlet mapStatetoProps = (state) =>{\r\n\r\n return{\r\n     PostsPage:state.ADDMES.state_,\r\n     MessStandart:state.MessStandart,\r\n     UserStandart:state.UserStandart,\r\n     \r\n }\r\n\r\n}\r\nlet mapDispathToProps = (dispatch) => {\r\n   \r\n    return{\r\n        addmess:(text,user) =>{\r\n            dispatch(ADD_MESS_ACTION_CREATOR(text,user))\r\n            \r\n        },\r\n        onChange_user:(text) =>{\r\n           \r\n            dispatch(USER_CHANGE_ACTION_CREATOR(text))\r\n        },\r\n        onChange_text:(text) =>{\r\n        dispatch(MESS_CHANGE_ACTION_CREATOR(text))}\r\n        \r\n        \r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport default compose(\r\n    connect(mapStatetoProps,mapDispathToProps),\r\n    \r\n)(Posts);","import {getMeLogin } from \"../stait\"\r\nconst SetInitialized = \"Set-Initialized\"\r\nlet initialState = {\r\n    initialized:false,\r\n}\r\n\r\nexport const appReduser = (state = initialState, action) => {\r\n    if (action.type === SetInitialized) {\r\n        return { ...state, initialized:true }\r\n    }\r\n    return state\r\n}\r\nexport  const initializedSuccsess = () =>({type:SetInitialized })\r\nexport const initialized = () => (dispatch) => {\r\n     dispatch(getMeLogin()).then( \r\n         () => {dispatch(initializedSuccsess())})\r\n        \r\n}","//  ПЕРЕМЕННЫЕ TYPE  ------------------------------------------\r\nconst ADD_MESS = \"ADD-MESS\";\r\nconst MESS_CHANGE = \"MESS-CHANGE\";\r\nconst USER_CHANGE = \"USER-CHANGE\";\r\n\r\n//----------------------------------\r\n\r\n\r\n\r\nlet initialState ={\r\n\r\n    state_:{ \r\n        Mess :[{\r\n        id:\"Admin\", \r\n        content:\"Hi\",}],\r\n    \r\n        \r\n        MessStandart :\"\",\r\n        UserStandart :\"\",\r\n        \r\n       }\r\n}\r\nexport const MESEGES_REDUCER = (state = initialState, action) => {\r\n  \r\n    if (action.type === ADD_MESS ) {\r\n        \r\n        let k = action.userID\r\n        let y = action.messgetext\r\n        \r\n        let newMess = {\r\n\r\n        id: k,\r\n\r\n        content: y}\r\n       \r\n        let StateCopy ={...state}\r\n        StateCopy.state_ ={...state.state_}\r\n        StateCopy.state_.Mess =[...state.state_.Mess]\r\n     \r\n       \r\n        StateCopy.state_.Mess.push(newMess);\r\n        k = \"\"\r\n        y = \"\"\r\n        \r\n       \r\n        return StateCopy\r\n       \r\n    }\r\n   \r\n    \r\n    \r\n return state\r\n}\r\n\r\n\r\n\r\nexport const MESS_CHANGE_REDUCER = (state = initialState.state_.MessStandart, action) => {\r\n\r\n\r\n    if (action.type === MESS_CHANGE) {\r\n        let StateCopy ={...state}\r\n      \r\n        StateCopy = action.messgetext\r\n        return StateCopy\r\n    }\r\n    return state\r\n}\r\n\r\n\r\nexport const USER_CHANG_REDUCER  = (state = initialState.state_.UserStandart, action) => {\r\n    \r\n    if (action.type === USER_CHANGE) {\r\n        let StateCopy ={...state}\r\n        StateCopy = action.userID;\r\n       \r\n        return StateCopy\r\n    }\r\n    return state\r\n}\r\n\r\n\r\n\r\n","\r\nconst PD = \"profile_data\"\r\nconst UDO = \"users_data_our\"\r\nconst P = \"pages\"\r\nconst F = \"isFetching\"\r\nconst T =\"TotalUsersCount\"\r\n\r\n\r\nlet initialState = {\r\n    users: [\r\n        /* {id:\"a\",email:\"b\",password:\"c\",login:\"d\"},\r\n        {id:\"a\",email:\"b\",password:\"c\",login:\"d\"},\r\n        {id:\"c\",email:\"d\",password:\"b\",login:\"a\"}, */\r\n\r\n\r\n    ],\r\n    PageSize: 20,\r\n    TotalUserCount:0,\r\n    CurrentPage: 1, \r\n    isFetching:true,\r\n\r\n\r\n\r\n}\r\n\r\nexport const USER_DATA_CHANG_REDUCER = (state = initialState, action) => {\r\n\r\n    if (action.type === PD) {\r\n\r\n        return { ...state, users: action.Profile }\r\n    }\r\n    return state\r\n\r\n}\r\nexport const USER_DATA_CHANG_OUR_REDUCER = (state = initialState, action) => {\r\n    if (action.type === UDO) {\r\n\r\n        return { ...state, users: action.usersDATA_OUR }\r\n    }\r\n    return state\r\n\r\n}\r\nexport const PAGES_SIZE_CHANG_REDUCER = (state = initialState, action) => {\r\n    if (action.type === P) {\r\n\r\n        return { ...state, CurrentPage: action.pages }\r\n    }\r\n    return state\r\n\r\n}\r\n\r\nexport const IS_FETCHING_CHANG_REDUCER = (state = initialState, action) => {\r\n    if (action.type === F) {\r\n\r\n        return { ...state, isFetching: action.isFetching }\r\n    }\r\n    return state\r\n\r\n}\r\nexport const TOTAL_USERS_COUNT_CHANG_REDUCER = (state = initialState, action) => {\r\n    if (action.type === T) {\r\n            \r\n        return { ...state, TotalUserCount:action.count }\r\n    }\r\n    return state\r\n\r\n}\r\n","const HD = \"HADER_data\"\r\n\r\nlet initialState = {\r\n    data_login: [],\r\n    isAuth:false,\r\n    idUser:null\r\n}\r\n\r\nexport const HADER_DATA_CHANG_REDUCER = (state = initialState, action) => {\r\n    \r\n    if (action.type === HD) {   \r\n       debugger\r\n        return { ...state, data_login: [action.data],isAuth:action.isAuth,idUser:action.data.data.id}\r\n    }\r\n    return state\r\n\r\n}\r\n\r\n\r\n","\r\nconst NewsData = \"NewsData\"\r\nlet initialState = {\r\n    news: [],\r\n    isFetching:true,\r\n}\r\n\r\n\r\nexport const News_Data_CHANG_REDUCER = (state = initialState, action) => {\r\n    if (action.type === NewsData) {\r\n        \r\n        return { ...state, news:action.data }\r\n    }\r\n    return state\r\n\r\n}\r\n","import {createStore,combineReducers,applyMiddleware,compose} from \"redux\";\r\nimport {MESEGES_REDUCER,MESS_CHANGE_REDUCER,USER_CHANG_REDUCER} from \"./reducer/reducer\"\r\nimport {USER_DATA_CHANG_REDUCER , USER_DATA_CHANG_OUR_REDUCER,PAGES_SIZE_CHANG_REDUCER,IS_FETCHING_CHANG_REDUCER,TOTAL_USERS_COUNT_CHANG_REDUCER } from \"./reducer/reduserLog\"\r\nimport {HADER_DATA_CHANG_REDUCER} from \"./reducer/reduserHeader\"\r\nimport {News_Data_CHANG_REDUCER} from \"./reducer/reduserNews\"\r\nimport {appReduser} from './reducer/reduserApp';\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nconst reducers = combineReducers({\r\n   ADDMES:MESEGES_REDUCER,\r\n   USER_DATA_CHANG_REREDUCER:USER_DATA_CHANG_REDUCER,\r\n   MessStandart: MESS_CHANGE_REDUCER,\r\n   UserStandart: USER_CHANG_REDUCER,\r\n   USER_DATA_CHANG_OUR_REREDUCER:USER_DATA_CHANG_OUR_REDUCER,\r\n   PAGES_SIZE:PAGES_SIZE_CHANG_REDUCER,\r\n   IS_FETCHING:IS_FETCHING_CHANG_REDUCER,  \r\n   TOTAL_USERS:TOTAL_USERS_COUNT_CHANG_REDUCER,\r\n   HADER:HADER_DATA_CHANG_REDUCER,\r\n   News_Data:News_Data_CHANG_REDUCER,\r\n   form: formReducer,\r\n   AppSettings:appReduser\r\n   \r\n   \r\n\r\n})\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers,  composeEnhancers(applyMiddleware(thunk)))\r\n\r\nexport default store;","import React from 'react';\nimport './App.css';\nimport Login from './login_to_ac/login';\nimport Reg from './login_to_ac/register';\nimport { BrowserRouter, Route} from 'react-router-dom';\nimport MainBody from './body/main';\nimport PostsContainer from './continer/PostsContainer';\nimport { initialized } from \"./reducer/reduserApp\"\n\n\nimport { connect } from 'react-redux'\nimport Prelouder from './userPege/prelouder';\nimport store from './store'\nimport { Provider  } from 'react-redux'\nconst NewsContainer = React.lazy(() => import('./continer/NewsContainer'));\nconst UserPageContainer = React.lazy(() => import('./continer/UserPage_Container'));\nlet Suspense = (Component) =>{\n  return<React.Suspense fallback={<Prelouder/>}><Component/></React.Suspense>\n}\n\n class App extends React.Component{\n  componentDidMount = () => {\n    this.props.initialized()\n}\n\n   render(){\n    debugger\n     if(!this.props.initialize) return <Prelouder/>\n   \n    return (\n     <>\n        <div className=\"wraper\">\n          <Route path=\"/register\" component={Reg} />\n          <Route path=\"/login\" component={Login} />\n        </div>\n        <div className=\"body\" >\n          <Route exact path=\"/Home\" component={MainBody} />\n          <Route exact path=\"/\" component={MainBody} />\n          <Route exact path=\"/Posts\" render={() => <PostsContainer />} />\n          <Route  path=\"/UserPage/:user_id?\" render={() => Suspense(UserPageContainer)} />\n          <Route  path=\"/News\" render={() => Suspense(NewsContainer) } />\n        </div>\n        </>\n    );\n   }\n  \n}\nlet mapStatetoProps = (state) => {\n  debugger\n  return {\n    initialize: state.AppSettings.initialized,\n    \n  }\n}\n\nlet AppContainer = connect(mapStatetoProps, { initialized })(App);\n\n let MyApp = (props) =>{\n  return <BrowserRouter>\n  <Provider store={store} >\n    <AppContainer />\n  </Provider>\n  </BrowserRouter>\n}\nexport default MyApp","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport  MyApp  from './App';\nimport * as serviceWorker from './serviceWorker';\n\n  ReactDOM.render(\n    <React.StrictMode>\n       <MyApp/>\n    </React.StrictMode>,\n    document.getElementById('root')\n  );\n\n\n\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n\n","export const MassDataLogin = (state) =>{\r\n    return state.HADER.data_login\r\n}\r\nexport const isAuthSeleted = (state) =>{\r\n    return state.HADER.isAuth\r\n}\r\nexport const idUserSeleted = (state) =>{\r\n    return state.HADER.idUser\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport {UnLogin } from \"../stait\"\r\nimport Header from '../body/header'\r\nimport {MassDataLogin,isAuthSeleted,idUserSeleted} from './selectors/SelectorHeader'\r\nconst HeaderApi = (props) =>{\r\n        return <Header {...props} />\r\n}\r\nlet mapStatetoProps = (state) => {\r\n    return {\r\n        ID: MassDataLogin(state),\r\n        isAuth:isAuthSeleted(state),\r\n        idUser:idUserSeleted(state)\r\n    }\r\n}\r\n\r\n\r\nlet UserPegeContainer = connect(mapStatetoProps, {UnLogin})(HeaderApi);\r\nexport default UserPegeContainer","import React from 'react';\r\nimport { Redirect } from 'react-router';\r\nimport {connect} from 'react-redux'\r\nlet mapStatetoPropsForRedirect = (state) =>{\r\n\r\n    return{\r\n        \r\n        isAuth:state.HADER.isAuth,\r\n    }\r\n   \r\n   }\r\n   export const withCheckLoginUnlogin = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (this.props.isAuth === false) return <Redirect to=\"/login\" />\r\n            return <Component {...this.props} />\r\n        }\r\n        \r\n    }\r\n    \r\n    let withCheckLoginUnloginContainer = connect(mapStatetoPropsForRedirect)(RedirectComponent);\r\n    return withCheckLoginUnloginContainer\r\n}\r\n\r\n","import React from 'react';\r\nimport prelouder from \"../img/loader.gif\"\r\nimport '../userPege/prelouder.css'\r\nlet Prelouder= (props) =>{\r\n    return <img className=\"prelouder\"  src={prelouder} alt=\"\"/>\r\n}\r\nexport default Prelouder","import React from 'react';\r\nimport './style.css';\r\nimport { NavLink, Redirect } from 'react-router-dom';\r\nconst Link = (props) => {\r\n  return <NavLink className={props.className} to={\"/\" + props.id} ><span>{props.text}</span></NavLink>\r\n}\r\n\r\nlet togleClass = React.createRef();\r\nlet togleClassWraper = React.createRef();\r\n\r\nconst Header = (props) => {\r\n  let animetedClick = ()=>{\r\n    togleClass.current.classList.toggle('togeleClassSpoiler');\r\n    togleClassWraper.current.classList.toggle('activeClassLogin')\r\n}\r\n\r\n  let UserId = () =>{\r\n    if(props.idUser === null)return <Redirect to=\"/News\" />\r\n    else return props.idUser\r\n  }\r\n\r\nlet mapHeaderLoginData = props.ID.map(data => {\r\n       return <div ref={togleClassWraper} key={data.data.id}  className=\"loginHeader\">\r\n       <span >login: {data.data.login}</span>\r\n       <span>email: {data.data.email}</span>\r\n       </div> \r\n})\r\n\r\n   let CheckLogin = () =>{\r\n   if(props.isAuth === false ){\r\n    return  <a className=\"block_out\" href=\"/login\"><img className=\"out\" src=\"https://www.freeiconspng.com/uploads/user-login-icon-14.png\" alt=\"\" /></a>\r\n}\r\n\r\n    if(props.isAuth === true){\r\n      return <>\r\n      <button onClick={props.UnLogin}  className=\"Unlogin\"> <span  className=\"\">Un login</span> </button>\r\n      <div ref={togleClass} onClick={animetedClick} className=\"spoiler\"></div> \r\n      {mapHeaderLoginData}\r\n      </>\r\n   }}\r\n\r\n  return (\r\n    <header className=\"header\">\r\n      <NavLink to=\"/Home\"> <img src=\"https://www.volynnews.com/public/images/social_logo.png\" alt=\"\" /></NavLink>\r\n      <Link className=\"nav_link  News\" id=\"News\" text=\"News\" />\r\n      <Link className=\"nav_link  Music\" id=\"Music\" text=\"Music\" />\r\n      <Link className=\"nav_link  Settings\" id=\"Settings\" text=\"Settings\" />\r\n      <Link className=\"nav_link  Home\" id=\"Home\" text=\"Home\" />\r\n      <Link className=\"nav_link  Posts\" id=\"Posts\" text=\"Posts\" />\r\n      <Link className=\"nav_link  Posts\" id={`UserPage/${UserId( )}`} text=\"User Page\" />\r\n       <CheckLogin/>\r\n    </header>\r\n  )\r\n}\r\n\r\n\r\nexport default Header;"],"sourceRoot":""}